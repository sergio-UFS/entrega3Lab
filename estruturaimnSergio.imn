node n1 {
    type router
    model host
    network-config {
	hostname servidor
	!
	interface eth0
	 ip address 192.0.2.10/24
	 ipv6 address 2001:db8:0::10/64
	!
    }
    canvas c1
    iconcoords {166.0 187.0}
    labelcoords {166.0 219.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resposta.html', )
	cmdup=('python -m SimpleHTTPServer 8081', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resposta.html
	custom-command resposta.html
	config {
	<html>
		<head>Porta de acesso http</head>
		<body> 
			Acesso autorizado para o servi√ßo
			
			Utilize outra porta para acessar a API
		</body>
	<html>
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n2 {
    type router
    model host
    network-config {
	hostname servidoreserva
	!
	interface eth0
	 ip address 192.0.2.11/24
	 ipv6 address 2001:db8:0::11/64
	!
    }
    canvas c1
    iconcoords {165.0 282.0}
    labelcoords {165.0 314.0}
    interface-peer {eth0 n3}
}

node n4 {
    type router
    model PC
    network-config {
	hostname cliente1
	!
	interface eth0
	 ip address 192.0.3.20/24
	 ipv6 address 2001:db8:1::20/64
	!
    }
    canvas c1
    iconcoords {875.0 100.0}
    labelcoords {875.0 132.0}
    interface-peer {eth0 n7}
}

node n5 {
    type router
    model PC
    network-config {
	hostname cliente2
	!
	interface eth0
	 ip address 192.0.3.21/24
	 ipv6 address 2001:db8:1::21/64
	!
    }
    canvas c1
    iconcoords {871.0 180.0}
    labelcoords {871.0 212.0}
    interface-peer {eth0 n7}
}

node n3 {
    type hub
    network-config {
	hostname hub
	!
    }
    canvas c1
    iconcoords {299.0 233.0}
    labelcoords {299.0 257.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n6}
}

node n6 {
    type router
    model router
    network-config {
	hostname roteador
	!
	interface eth1
	 ip address 192.0.3.1/24
	 ipv6 address 2001:db8:1::1/64
	!
	interface eth0
	 ip address 192.0.2.1/24
	 ipv6 address 2001:db8:0::1/64
	!
    }
    canvas c1
    iconcoords {422.0 231.0}
    labelcoords {422.0 263.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n7}
}

node n7 {
    type lanswitch
    network-config {
	hostname empresa
	!
    }
    canvas c1
    iconcoords {704.0 122.0}
    labelcoords {704.0 146.0}
    interface-peer {e0 n4}
    interface-peer {e1 n5}
    interface-peer {e2 n6}
}

link l1 {
    nodes {n1 n3}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n6}
    bandwidth 0
}

link l4 {
    nodes {n7 n4}
    bandwidth 0
}

link l5 {
    nodes {n7 n5}
    bandwidth 0
}

link l6 {
    nodes {n7 n6}
    bandwidth 0
}

annotation a1 {
    iconcoords {83.0 138.0 538.0 361.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {221.0 155.0}
    type text
    label {Estrutura interna servidores}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a3 {
    iconcoords {598.0 27.0 963.0 235.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #cec998
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {680.0 46.0}
    type text
    label {Estrutura interna (empresa)}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

